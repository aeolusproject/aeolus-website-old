---
title: Aeolus Project - Oz Architecture
---
%h1 Oz Architecture

Oz was created to facilitate the automatic installation of guest operating
systems.  One of the key features of the design is that it <b>always</b>
uses the native operating system tools to do installs.  This ensures that
after installation, the disk image that Oz leaves behind is exactly the same
as if the installation CD had been used on a bare-metal machine.

Oz has the ability to do 3 major things:
%ol
  %li Install operating systems.
  %li Customize operating systems.
  %li Generate metadata (ICICLE) about operating systems.

Each of the three operations can be done together, individually, or not at all.

%h3 Install operating systems
The first operation that Oz can do is to install operating systems.  By default,
Oz has enough built-in knowledge to install minimal operating systems with
little input.  Oz just needs to be told which operating system to install, and
where the installation media is, and it can do the rest.  The steps that Oz
goes through to do an operating system install are roughly:
%ol
  %li Download the installation media.
  %li Generate an automated installation file (e.g. kickstart, winnt.sif, etc).
  %li Generate a modified installation media that includes the installation file.
  %li Run the native installer in a KVM (or Qemu) guest.
  %li At the end of installation, shutdown the guest.

%h3 Customize operating systems
The second operation that Oz can do is to customize operating systems.  In this
case "customize" means to install additional packages and files into the
operating system.  This is <b>always</b> done as a separate step from
installation for a few reasons:
%ol
  %li It reduces the chances of failure during the initial operating system install.
  %li It uses the native tools (yum, apt-get, etc) to do installation.
  %li It allows customization of operating systems that were not initially installed via Oz.

The steps that Oz goes through to do customization on an operating system are
roughly:
%ol
  %li Modify the operating system disk image to allow remote access.
  %li Start up the operating system in a tightly controlled KVM guest.
  %li Run remote commands (ssh, etc) to install packages and files.
  %li Shut down the operating system.
  %li Undo the changes done in step 1.

%h3 Generate metadata (ICICLE) about operating systems
The third operation that Oz can do is to generate meta-data (including package
manifests) about an operating system.  This meta-data is represented in a
piece of XML called an ICICLE.  Meta-data generation is always done as a
separate step from installation for the same reasons that customization is
separate, but may be combined together with the customization step as an
optimization.  The steps that Oz goes through to generate an ICICLE are roughly:
%ol
  %li Modify the operating system disk image to allow remote access.
  %li Start up the operating system in a tightly controlled KVM guest.
  %li Run remote commands (ssh, etc) to discover the installed packages.
  %li Shut down the operating system.
  %li Undo the changes done in step 1.
  %li Output an ICICLE document that lists the packages.
