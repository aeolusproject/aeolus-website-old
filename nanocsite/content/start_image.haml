---
title: Aeolus - Start an Instance of the Image
---
%h1 Start an Instance of the Image

%p
  With the image as an AMI in your provider account, you can start instances
  when desired.

%p
  We'll take you through starting an instance of the image using Aeolus's
  web interface.  Then, if you're using Amazon EC2, we'll show you how to connect to that image remotely using
  SSH.

.page-listing
  %h3 Getting Started Guide

  %ol
    %li
      %a{ :href => "basic_glossary.html",
          :title => "Basic glossary" } Basic glossary

    %li
      %a{ :href => "configuring_aeolus.html",
          :title => "Configuring Aeolus" } Configuring Aeolus

    %li
      %a{ :href => "first_login.html",
          :title => "First login" } First login

    %li
      %a{ :href => "configure_provider.html",
          :title => "Configure your Provider" } Configure your Provider

    %li
      %a{ :href => "make_template.html",
          :title => "Create a Fedora 15 Template" } Create a Fedora 15 Template

    %li
      Start an Instance of the Image

    %li
      %a{ :href => "stop_image.html",
          :title => "Stop a running Instance" } Stop a running Instance

    %li
      %a{ :href => "cleaning_up.html",
          :title => "Cleaning up" } Cleaning up

%br

.section-grouping
  %h2 1. Create a Catalog and Deployable

  %p
    Create a deployable XML file with the following content.  Use the image id generated when you pushed the built image in the previous step.

    %pre
      :escaped
          <deployable name="My Deployable">
            <description>This is an example deployment</description>
            <assemblies>
              <assembly name="samplehost" hwp="hwp1">
                <image id="cb7acabd-59c3-41a7-894a-f3e1b072638c">
                </image>
              </assembly>
            </assemblies>
          </deployable>
  %p
    %ol
      %li
        In the Aeolus web interface, go to the
        %b Administer
        &rArr; <b>Content</b>.

      %li
        Click the "New Catalog" button. Give your catalog a name, associate it with the Default pool, and save it.

      %li
        Click on the name of your new catalog.  Click on the "New Catalog Entry" button.  Give your entry a name, description, and upload the deployable XML file you created.  Save your new catalog entry.

      %li
        In the Aeolus web interface, go to the
        %b Monitor
        tab.
        %br
        Under "Your Pools" is the default pool. On the right side
        of the default pool there's an arrow. Click the arrow and it will expose the
        button "New Deployment". Click the "New Deployment" button.

        %br
        %center
          %a{ :href => "images/getting_started/new_deployment.png",
              :target => "_blank" }
            %img.thumbnail{ :src => "images/getting_started/thumbnails/new_deployment_thumb.png",
                  :title => "New Deployment - click to view at full size in a new window",
                  :alt => "New Deployment - click to view at full size in a new window" }
        %br

      %li
        Give your deployment a name and select the deployable you just created.
        Click the
        %b Next
        button.

      %li
        To launch the deployment click the "Launch" button.
  %p
    Aeolus will then launch an instance of the template, using the AMI
    created on the previous page.  Within a minute or two, the
    %b State
    field for the instance should change to "<em>running</em>".

  %p
    If you are using Amazon EC2, follow the next steps to complete your configuration.
%br

.section-grouping
  %h2 2. Configure EC2 for SSH connections

  %p
    By default, Amazon EC2 does not allow any incoming connections to
    instances.

  %p
    We now configure it to allow incoming SSH connections:

  %p
    %ol
      %li
        In the Amazon AWS Management Console, go to
        %b EC2
        &rArr; <b>Security Groups</b>.
        %br
        %br
        This displays the list of EC2 security groups.
        %br
        %br

      %li
        Click on the
        %b default
        security group.
        %br
        %br
        This displays the details for the default security group, in the
        lower part of the window.
        %br
        %br

      %li
        Click on the
        %b Inbound
        tab.

      %li
        For the
        %b Create a new rule
        selector, choose <em>SSH</em>.

      %li
        Click the
        %b Add Rule
        button.

      %li
        Click the
        %b Apply Rule Changes
        button just below it.

  %p
    &nbsp;&nbsp;&nbsp;
    %img{ :src => "images/getting_started/ec2_ssh_rule_added.png",
          :title => "SSH rule added to EC2 default security group",
          :alt => "SSH rule added to EC2 default security group" }

  %p
    EC2 now allows SSH connections to your instances.

%br

.section-grouping
  %h2 3. Retrieve the Private SSH Key

  %p
    To connect to the new running instance using SSH, you need the private
    key generated for it: 

  %p
    %ol
      %li
        In the Aeolus web interface, click the
        %b MONITOR
        tab.

      %li
        Click the name of the new running instance.
        %b My First Deployment
        in the above screenshot.
        %br
        This will open the Details view, showing the
        %b Properties
        tab for the instance.

      %li
        Click the
        %em Download Key
        link to bring up a download dialog for the SSH private key file:
        %br
        %br
        %img{ :src => "images/getting_started/instance_ssh_private_key_download_link.png",
              :title => "Text link to Instance 1 SSH private key",
              :alt => "Text link to Instance 1 SSH private key" }
        %br
        %br

      %li
        Save the private key with a name such as
        <em>instance_1_private_key.pem</em>.

      %li
        Tighten the permissions of the saved private file to only allow
        access by yourself, and only read access:
        %pre
          :preserve
            $ chmod 400 instance_1_private_key.pem
        %br
        %b IMPORTANT:
        %em
          This is because SSH will refuse to use any private key with
          insecure permissions.    

%br

.section-grouping
  %h2 4. Connect to the instance

  %p
    Now we connect to the new running instance using SSH:

  %p
    %ol       
      %li
        Get the public address of the instance from the instance list on the same
        screen the ssh came from:
        %br
        %br
        %img{ :src => "images/getting_started/instance_ssh_private_key_download_link.png",
              :title => "Text link to Instance 1 SSH private key",
              :alt => "Text link to Instance 1 SSH private key" }
        %br
        %br

      %li Launch a terminal session on your desktop.

      %li
        In the terminal session, start ssh, passing it the name of the
        private key file for the instance with the "<em>-i</em>" option, giving
        the root user, and giving the public address of the instance:

  %p
    %pre
      :preserve
        $ ssh -i <b>instance_1_private_key.pem</b> root@<b>ec2-67-202-12-174.compute-1.amazonaws.com</b>
        The authenticity of host 'ec2-67-202-12-174.compute-1.amazonaws.com (67.202.12.174)' can't be established.
        RSA key fingerprint is 09:94:bc:be:1c:a0:7c:8b:50:e5:bf:42:8c:cf:86:1b.
        Are you sure you want to continue connecting (yes/no)? yes
        Warning: Permanently added 'ec2-67-202-12-174.compute-1.amazonaws.com,67.202.12.174' (RSA) to the list of known hosts.
        <b>[root@localhost ~]#</b>

  %p
    You are now logged into the running Fedora 15 instance as the root user.

  .warning
    %p
      %b WARNING:
      This Fedora 15 image is from the equivalent of a DVD install, so has
      %b NOT
      had security updates applied.

    %p
      If you intend on running the instance for
      any length of time, you
      %b must
      apply all relevant security updates using a tool such as <em>yum</em>,
      then rebooting.

    %p
      %b IMPORTANT:
      Changes to the file system persist across reboots, but are lost when it
      is shut down.  This means a
      %em yum update
      (then reboot) will be needed each time the instance is started.

%br

%a.button{ :href => "stop_image.html", :title => "Stop an Instance of an Image" }
  Stop Image
  %img{:src => "images/button-right.png", :alt => "â†’"}
