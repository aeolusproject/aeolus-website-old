---
title: Aeolus | How to compile Aeolus
---
%h1 How to compile Aeolus

%p
  Aeolus is made up of several components, each of which need to be compiled
  separately.

%h2 Instructions for Fedora and RHEL/CentOS


%p Compiling in the following order is known to work

%ol
  %li
    %a(href="#conduct") Conductor
  %li
    %a(href="#oz") Oz
  %li
    %a(href="#factory") Image Factory
  %li
    %a(href="#iwhd") Image Warehouse
  %li
    %a(href="#audrey") Audrey

%p
  This page also has instructions for building some external dependencies,
  though they're generally not needed.

%ul
  %li
    %a(href="#qpid") Apache Qpid
  %li
    %a(href="#condor") Condor
  %li
    %a(href="#libdeltacloud") libdeltacloud


%br

.section-grouping
  %h2 Pre-requisites

  %p
    Aeolus has a large number of prerequisite packages.
    %br
    %br
    The best way to install them is by first installing the released
    Aeolus-all packages, using the instructions on the
    %a{ :href => "get_it.html" } Get Aeolus
    page.

    %br
    %br
    Follow the instructions on the Get Aeolus installation page, then
    return here.

%br

.section-grouping
  %h3(id="conduct") Build Conductor

  %h4 1. Install the required development packages:

  %p
    %pre
      :preserve
        $ sudo yum install git make rest-devel rpm-build ruby-devel zip rubygem-sass \
          rubygem-compass rubygem-compass-960-plugin

  %h4 2. Clone the Conductor git repository:

  %p
    %pre
      :preserve
        $ git clone git://github.com/aeolusproject/conductor.git -b <em><span style="color: chartreuse">branch_name</span></em>

  %p
    Look up the <em>branch_name</em> to use
    <a href="https://www.aeolusproject.org/redmine/projects/aeolus/wiki/GitHub_Branches_and_Tags" "Our Git Branches and Tags">here</a>.

  %h4 3. Initialise any needed git submodules

  %p
    %pre
      :preserve
        $ cd conductor
        $ git submodule init
        $ git submodule update

  %h4 4. Build the Conductor RPMs:

  %p
    %pre
      :preserve
        $ make rpms

  %p
    The compiled RPMs are placed in: <b>~/rpmbuild/RPMS/noarch</b>:

  %p
    %pre
      :preserve
        $ ls -la ~/rpmbuild/RPMS/noarch/
        total 1732
        drwxr-xr-x. 2 jc jc    4096 May 28 16:53 .
        drwxr-xr-x. 3 jc jc    4096 May 28 16:53 ..
        -rw-rw-r--. 1 jc jc   17149 May 28 16:53 aeolus-all-0.9.0-0.20120528065313gite451adc.fc16.noarch.rpm
        -rw-rw-r--. 1 jc jc 1587482 May 28 16:53 aeolus-conductor-0.9.0-0.20120528065313gite451adc.fc16.noarch.rpm
        -rw-rw-r--. 1 jc jc   25986 May 28 16:53 aeolus-conductor-daemons-0.9.0-0.20120528065313gite451adc.fc16.noarch.rpm
        -rw-rw-r--. 1 jc jc  100546 May 28 16:53 aeolus-conductor-devel-0.9.0-0.20120528065313gite451adc.fc16.noarch.rpm
        -rw-rw-r--. 1 jc jc   21889 May 28 16:53 aeolus-conductor-doc-0.9.0-0.20120528065313gite451adc.fc16.noarch.rpm

%br

.section-grouping
  %h3(id="oz") Build Oz

  %h4 1. Install the required development packages:

  %p
    %pre
      :preserve
        $ sudo yum install gcc git make rpm-build

  %h4 2. Clone the Oz git repository

  %p
    %pre
      :preserve
        $ git clone git://github.com/clalancette/oz.git

  %h4 3. Build the RPMs

  %p
    %pre
      :preserve
        $ cd oz
        $ make rpm

  %p
    The RPMs are built and placed in <b>~/rpmbuild/RPMS</b>,
    under either the
    %b i386
    or
    %b x86_64
    subdirectory, depending upon your architecture:

  %p
    %pre
      :preserve
        $ ls -l ~/rpmbuild/RPMS/x86_64/oz-*
        -rw-r--r--. 1 jc jc 283452 Apr 21 20:19 /home/jc/rpmbuild/RPMS/x86_64/oz-0.3.0-1.fc14.x86_64.rpm
        -rw-r--r--. 1 jc jc   2060 Apr 21 20:19 /home/jc/rpmbuild/RPMS/x86_64/oz-debuginfo-0.3.0-1.fc14.x86_64.rpm

%br

.section-grouping
  %h3(id="factory") Build ImageFactory

  %h4 1. Install the required development packages:

  %p
    %pre
      :preserve
        $ sudo yum install gcc git make rpm-build

  %h4 2. Clone the Image Factory git repository

  %p
    %pre
      :preserve
        $ git clone git://github.com/aeolusproject/imagefactory.git

  %h4 3. Build the RPM

  %p
    %pre
      :preserve
        $ cd imagefactory
        $ make rpm

  %p
    The Image Factory RPM will be placed in <b>~/rpmbuild/RPMS/noarch</b>:

  %p
    %pre
      :preserve
        $ ls -la ~/rpmbuild/RPMS/noarch/im*
        -rw-r--r--. 1 jc jc 139914 Aug 22 15:24 imagefactory-0.4.1_55_g9203de5-1.fc14.noarch.rpm

%br

.section-grouping
  %h3(id="iwhd") Build Image Warehouse

  %h4 1. Install git and gperf

  %p
    %pre
      :preserve
        $ sudo yum install git gperf

  %h4 2. Clone the Image Warehouse git repository

  %p
    %pre
      :preserve
        $ git clone git://git.fedorahosted.org/iwhd.git

  %h4 3. Install its dependencies

  %p
    %pre
      :preserve
        $ cd iwhd
        $ sudo yum install $(grep BuildReq iwhd.spec.in|sed 's/.*: //')

  %h4 4. Build the RPMs

  %p
    %pre
      :preserve
        $ cd iwhd
        $ ./bootstrap
        $ ./configure --quiet
        $ make rpm

  %p
    The Image Warehouse (iwhd) RPMs are placed in <b>~/rpmbuild/RPMS</b>,
    under either the
    %b i386
    or
    %b x86_64
    subdirectory, depending upon your architecture:

  %p
    %pre
      :preserve
        $ ls -la ~/rpmbuild/RPMS/x86_64/iwhd-*
        -rw-r--r--. 1 jc jc 127244 Apr 21 21:34 /home/jc/rpmbuild/RPMS/x86_64/iwhd-0.93.5.adc3-1.fc14.x86_64.rpm
        -rw-r--r--. 1 jc jc 567404 Apr 21 21:34 /home/jc/rpmbuild/RPMS/x86_64/iwhd-debuginfo-0.93.5.adc3-1.fc14.x86_64.rpm

%br

.section-grouping
  %h3(id="audrey") Build Audrey

  %h4 1. Install the required development packages:

  %p
    %pre
      :preserve
        $ sudo yum install git

  %h4 2. Clone the Audrey git repository

  %p
    %pre
      :preserve
        $ git clone git://github.com/aeolusproject/audrey.git

  %h4 3. Build the RPMs

  %p
    %pre
      :preserve
        $ cd audrey/configserver
        $ rake rpm

  %p
    The Audrey config server RPM is placed in <b>~/rpmbuild/RPMS</b>, under either the
    %b i386
    or
    %b x86_64
    subdirectory, depending upon your architecture:

  %p
    %pre
      :preserve
        $ ls -la ~/rpmbuild/RPMS/x86_64/aeolus-config*
        -rw-r--r--. 1 jc jc 20672 Apr 22 00:49 /home/jc/rpmbuild/RPMS/x86_64/aeolus-configserver-0.1.0-1.fc14.x86_64.rpm

%br
%br

%h2 Instructions for building external dependencies

%p
  %i
    These are not always needed, but are useful to have instructions for.

.section-grouping
  %h3(id="qpid") Build Apache Qpid&trade;

  %p
    Web site:
    %a{ :href => "http://qpid.apache.org", :title => "Apache Qpid home page" } http://qpid.apache.org

  %p
    Aeolus requires Apache Qpid 0.8 or higher.  We re-use the Apache Qpid
    packages from the Red Hat MRG Messaging product, as it offers additional
    functionality over the standard Apache Qpid releases.

  %p
    Aeolus makes use of the C++ (Qpid-cpp), Python (Python-qpid), and Ruby
    (Ruby-qpid) language bindings.

  %h4 1. Install the required dependencies

  %p
    %pre
      :preserve
        $ sudo yum install boost-devel e2fsprogs-devel pkgconfig gcc-c++ \
        &nbsp;&nbsp;make autoconf automake ruby libtool help2man doxygen graphviz \
        &nbsp;&nbsp;corosynclib-devel clusterlib-devel cyrus-sasl-devel \
        &nbsp;&nbsp;nss-devel nspr-devel xqilla-devel xerces-c-devel \
        &nbsp;&nbsp;ruby ruby-devel swig libibverbs-devel librdmacm-devel \
        &nbsp;&nbsp;libaio-devel

  %h4 2. Download the Fedora Source RPM

  %p
    To compile it yourself, you need to get the source RPM (qpid-cpp) from
    Fedora Koji:

  %p
    &nbsp;&nbsp;&nbsp;&nbsp;
    %a{ :href => "http://koji.fedoraproject.org/koji/packageinfo?packageID=10015",
        :title => "Qpid packages in Fedora Koji" } http://koji.fedoraproject.org/koji/packageinfo?packageID=10015

  %h4 3. Build the RPMs

  %p
    %pre
      :preserve
        $ rpm -ivh qpid-cpp-0.8-8.fc16.src.rpm
        $ cd ~/rpmbuild/SPECS
        $ rpmbuild -bb qpid-cpp.spec

  %p
    The compiled RPMs are placed in: <b>~/rpmbuild/RPMS</b>.
    %br
    %br
    Two RPMs will be in the
    %b noarch
    subdirectory, with the rest being in either
    %b i386
    or
    <b>x86_64</b>, depending upon your architecture:

  %p
    %pre
      :preserve
        $ ls -la ~/rpmbuild/RPMS/x86_64/
        total 34048
        drwxr-xr-x. 2 jc jc     4096 May  4 15:32 .
        drwxr-xr-x. 4 jc jc     4096 May  4 15:32 ..
        -rw-r--r--. 1 jc jc  1003796 May  4 15:32 python-qpid-qmf-0.8-8.fc14.x86_64.rpm
        -rw-r--r--. 1 jc jc  1147724 May  4 15:32 qpid-cpp-client-0.8-8.fc14.x86_64.rpm
        -rw-r--r--. 1 jc jc   388092 May  4 15:32 qpid-cpp-client-devel-0.8-8.fc14.x86_64.rpm
        -rw-r--r--. 1 jc jc   101244 May  4 15:32 qpid-cpp-client-rdma-0.8-8.fc14.x86_64.rpm
        -rw-r--r--. 1 jc jc   116656 May  4 15:32 qpid-cpp-client-ssl-0.8-8.fc14.x86_64.rpm
        -rw-r--r--. 1 jc jc 29492624 May  4 15:32 qpid-cpp-debuginfo-0.8-8.fc14.x86_64.rpm
        -rw-r--r--. 1 jc jc  1032144 May  4 15:32 qpid-cpp-server-0.8-8.fc14.x86_64.rpm
        -rw-r--r--. 1 jc jc   297144 May  4 15:32 qpid-cpp-server-cluster-0.8-8.fc14.x86_64.rpm
        -rw-r--r--. 1 jc jc    14308 May  4 15:32 qpid-cpp-server-devel-0.8-8.fc14.x86_64.rpm
        -rw-r--r--. 1 jc jc    47292 May  4 15:32 qpid-cpp-server-rdma-0.8-8.fc14.x86_64.rpm
        -rw-r--r--. 1 jc jc    52012 May  4 15:32 qpid-cpp-server-ssl-0.8-8.fc14.x86_64.rpm
        -rw-r--r--. 1 jc jc   361944 May  4 15:32 qpid-cpp-server-store-0.8-8.fc14.x86_64.rpm
        -rw-r--r--. 1 jc jc    52740 May  4 15:32 qpid-cpp-server-xml-0.8-8.fc14.x86_64.rpm
        -rw-r--r--. 1 jc jc   477664 May  4 15:32 qpid-qmf-0.8-8.fc14.x86_64.rpm
        -rw-r--r--. 1 jc jc    57260 May  4 15:32 qpid-qmf-devel-0.8-8.fc14.x86_64.rpm
        -rw-r--r--. 1 jc jc   186164 May  4 15:32 ruby-qpid-qmf-0.8-8.fc14.x86_64.rpm

  %p
    %pre
      :preserve
        $ ls -la ~/rpmbuild/RPMS/noarch/
        total 1140
        drwxr-xr-x. 2 jc jc    4096 May  4 15:32 .
        drwxr-xr-x. 4 jc jc    4096 May  4 15:32 ..
        -rw-r--r--. 1 jc jc 1115736 May  4 15:32 qpid-cpp-client-devel-docs-0.8-8.fc14.noarch.rpm
        -rw-r--r--. 1 jc jc   40372 May  4 15:32 qpid-tools-0.8-8.fc14.noarch.rpm

  #trademark
    Apache, Qpid, and Apache Qpid are trademarks of The Apache Software Foundation.

%br

.section-grouping
  %h3(id="condor") Build Condor

  %p
    Web site:
    %a{ :href => "http://www.cs.wisc.edu/condor/", :title => "Condor home page" } http://www.cs.wisc.edu/condor/

  %p
    %b Note
    \- Apache Qpid 0.8 or later (including it's development headers) must be
    installed first, else Condor will be built without pieces it needs.

  %h4 1. Install the required dependencies

  %p
    %pre
      :preserve
        $ sudo yum install coredumper coredumper-devel git qpid-cpp-server-devel wget

  %h4 2. Download the build script

  %p
    %pre
      :preserve
        $ wget https://github.com/aeolusproject/aeolus-extras/raw/master/condor/make_condor_package_7.x.sh --no-check-certificate
        $ chmod 755 make_condor_package_7.x.sh

  %p
    This script creates the Condor RPMs after we put everything in the right
    places for it.

  %h4 3. Clone the Condor git repository

  %p
    %pre
      :preserve
        $ git clone http://git.condorproject.org/repos/condor.git -b V7_6-branch

  %h4 4. Adjust the build script

  %p
    There is a variable in the build script, <i>PATH_TO_CONDOR</i>, that you
    need to adjust.  It needs to point to the base of the Condor git repo you
    just cloned.
    %br
    %br
    For example, on a test system here, it needs to be changed to:

    %pre
      :preserve
        PATH_TO_CONDOR=$HOME/git_repos/condor

  %p
    This is what the git repo looks like.  Yours should be similar:

    %pre
      :preserve
        $ ls -al $HOME/git_repos/condor
        total 64
        drwxr-xr-x.  8 jc jc 4096 Apr 24 21:12 .
        drwxrwxr-x. 14 jc jc 4096 Apr 24 21:56 ..
        drwxrwxr-x.  4 jc jc 4096 Apr 24 17:31 build
        -rw-rw-r--.  1 jc jc 5041 Apr 24 17:31 CMakeLists.txt
        -rwxrwxr-x.  1 jc jc  696 Apr 24 17:31 configure_uw
        drwxrwxr-x.  3 jc jc 4096 Apr 24 21:12 externals
        drwxrwxr-x.  8 jc jc 4096 Apr 24 21:48 .git
        -rw-rw-r--.  1 jc jc    7 Apr 24 17:31 .gitignore
        -rw-rw-r--.  1 jc jc 9723 Apr 24 17:31 LICENSE-2.0.txt
        drwxrwxr-x.  3 jc jc 4096 Apr 24 17:31 msconfig
        drwxrwxr-x.  6 jc jc 4096 Apr 24 17:31 nmi_tools
        -rw-rw-r--.  1 jc jc 2317 Apr 24 17:31 NOTICE.txt
        drwxrwxr-x. 77 jc jc 4096 Apr 24 21:12 src

  %h4 5. Place the man page archive where it will be found

  %p
    %pre
      :preserve
        $ pushd ~/rpmbuild/SOURCES
        $ wget https://github.com/aeolusproject/aeolus-extras/raw/master/condor/man-current.tar.gz --no-check-certificate
        $ popd

  %h4 6. Build the RPMs

  %p
    Run the build script:

    %pre
      :preserve
        $ ./make_condor_package_7.x.sh 0dcloud

  %p
    The
    %b 0dcloud
    string is used as the release name, and can be anything you like.  It
    will be incorporated into the name of the packages.

  %p
    The Condor RPMs are placed in <b>~/rpmbuild/RPMS</b>, under either the
    %b i386
    or
    %b x86_64
    subdirectory, depending upon your architecture:

    %pre
      :preserve
        $ ls -la ~/rpmbuild/RPMS/x86_64/condor-*
        -rw-r--r--. 1 jc jc  35920140 Apr 24 23:13 /home/jc/rpmbuild/RPMS/x86_64/condor-7.6.1-0dcloud.fc14.x86_64.rpm
        -rw-r--r--. 1 jc jc 116735856 Apr 24 23:14 /home/jc/rpmbuild/RPMS/x86_64/condor-debuginfo-7.6.1-0dcloud.fc14.x86_64.rpm
        -rw-r--r--. 1 jc jc    656356 Apr 24 23:13 /home/jc/rpmbuild/RPMS/x86_64/condor-kbdd-7.6.1-0dcloud.fc14.x86_64.rpm
        -rw-r--r--. 1 jc jc    708088 Apr 24 23:13 /home/jc/rpmbuild/RPMS/x86_64/condor-vm-gahp-7.6.1-0dcloud.fc14.x86_64.rpm

%br

.section-grouping
  %h3(id="libdeltacloud") Build libdeltacloud

  %p
    Web site:
    %a{ :href => "http://www.deltacloud.org", :title => "Deltacloud home page" } http://www.deltacloud.org

  %h4 1. Install the required development packages:

  %p
    %pre
      :preserve
        $ sudo yum install git

  %h4 2. Clone the libdeltacloud git repository

  %p
    %pre
      :preserve
        $ git clone git://git.fedorahosted.org/deltacloud/libdeltacloud.git

  %h4 3. Build the RPMs

  %p
    %pre
      :preserve
        $ cd libdeltacloud
        $ ./autogen.sh
        $ ./configure --quiet
        $ make rpm

  %p
    The libdeltacloud RPMs are placed in <b>~/rpmbuild/RPMS</b>, under either the
    %b i386
    or
    %b x86_64
    subdirectory, depending upon your architecture:

  %p
    %pre
      :preserve
        $ ls -la ~/rpmbuild/RPMS/x86_64/libdeltacloud-*
        -rw-r--r--. 1 jc jc 32680 Apr 22 12:59 /home/jc/rpmbuild/RPMS/x86_64/libdeltacloud-0.7-1.fc14.x86_64.rpm
        -rw-r--r--. 1 jc jc 68088 Apr 22 12:59 /home/jc/rpmbuild/RPMS/x86_64/libdeltacloud-debuginfo-0.7-1.fc14.x86_64.rpm
        -rw-r--r--. 1 jc jc  7600 Apr 22 12:59 /home/jc/rpmbuild/RPMS/x86_64/libdeltacloud-devel-0.7-1.fc14.x86_64.rpm
