---
title: Aeolus Project - Oz Advanced Usage
area: projects
subarea: oz
extension: html
filter:
  - haml
---
%h1 Advanced Oz Usage

.section-grouping
  Because Oz is a general purpose utility, it has a few configuration options
  that make it more useful to someone who doesn't just want the (sensible)
  defaults that Oz provides.

%br

.section-grouping
  %h2 Configuration file

  %p
    Oz supports a configuration file in the standard ini format.  By default Oz
    will look in /etc/oz/oz.cfg for the configuration, though this can be overridden
    on the oz-install, oz-customize, or oz-generate-icicle command lines.  The
    ini file that Oz expects to see looks like:

  %p
    %pre
      :preserve
        [paths]
        output_dir = /var/lib/libvirt/images
        data_dir = /var/lib/oz

        [libvirt]
        uri = qemu:///system
        type = kvm

  %p
    The output_dir under the paths section describes where the diskimage that
    Oz will be stored.  By default, Oz uses /var/lib/libvirt/images for these
    diskimages, but this configuration key allows the user to set it to any
    directory in the system.  Because operating systems take significant amounts
    of space to install (depending on the operating system and configuration, up
    to many gigabytes), this should be a large data area.

  %p
    The data_dir under the paths section describes where the work area that Oz
    uses is located.  By default, this work area is under /var/lib/oz, but this
    configuration key allows the user to set it to any directory in the system.
    Because operating system installation disks can take significant amounts of
    space to store and extract, this should be a large data area.  Also note that
    Oz caches the "pristine" installation media that it downloads in this area,
    so this can grow quite large.  (in general it is safe to delete contents of
    this directory, though that may slow down future guest installations when the
    installation media needs to be re-downloaded)

  %p
    The uri under the libvirt section describes what libvirt URI Oz should use
    when manipulating the guests.  By default, the qemu libvirt driver (which also
    supports KVM guests) is used.  Note that this has not been tested on hypervisors
    other than qemu/kvm, so your mileage may vary if you change this.

  %p
    The type under the libvirt section describes what type of guest Oz should use
    when creating libvirt guests.  By default, the "kvm" type of guests is used.
    Note that this is intimately tied to the URI that is specified in the uri
    section, so changing this to a value that a particular libvirt driver doesn't
    understand will lead to failure.

%br

.section-grouping
  %h2 Debugging information

  %p
    When trying to track down a problem with Oz, it is most helpful to have verbose
    debugging information.  All of the Oz tools
    (<a href="oz-install.html">oz-install</a>,
    <a href="oz-customize.html">oz-customize</a>, and
    <a href="oz-generate-icicle.html">oz-generate-icicle</a>) support the -d
    parameter that manipulates the debugging level.  When submitting a bug report,
    please make sure to turn the -d level to 3 or greater to generate lots of
    debugging information.

%br

.section-grouping
  %h2 Custom automated installation files

  %p
    This is a powerful feature of Oz, but with great power comes great
    responsibility.  By default Oz generates a minimal operating system automated
    installation file, just enough to get the OS up and running.  As described
    in the <a href="oz-architecture.html">Oz Architecture</a> document, this is
    done to reduce the possibility of errors during the initial installation phase.
    However, for users who really know what they are doing and what they want,
    <a href="oz-install.html">oz-install</a> supports the -a parameter, which
    allows the user to specify a custom automated installation file.  In order for
    this to succeed, the user-specified automated installation file must do the
    following:

    %ol
      %li Run all installation steps without prompting
      %li Additional steps or packages must not fail
      %li Automatically shut down the installer (operating system) at the end of installation

  %p
    If the above rules are adhered to, then the user-specified automated
    installation file gives the user a lot more power to customize their operating
    system.
