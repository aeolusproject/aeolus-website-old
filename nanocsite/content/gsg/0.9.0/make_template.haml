---
title: Aeolus | Create a Fedora 15 Template
breadcrumb_name: Make Template
extension: html
filter: haml
---
%h1 Create a Fedora 15 Template

.page-listing
  %h3 Getting Started Guide

  %ol
    %li
      %a{ :href => "basic_glossary.html",
          :title => "Basic glossary" } Basic glossary

    %li
      %a{ :href => "configuring_aeolus.html",
          :title => "Configuring Aeolus" } Configuring Aeolus

    %li
      %a{ :href => "first_login.html",
          :title => "First login" } First login

    %li
      %a{ :href => "configure_provider.html",
          :title => "Configure your Provider" } Configure your Provider

    %li
      %a{ :href => "configure_cli.html",
          :title => "Configuring aeolus-cli" } Configure the Aeolus Command Line Tool

    %li
      Create a Fedora 15 Template

    %li
      %a{ :href => "start_image.html",
          :title => "Start an Instance of the Image" } Start an Instance of the Image

    %li
      %a{ :href => "stop_image.html",
          :title => "Stop a running Instance" } Stop a running Instance

    %li
      %a{ :href => "cleaning_up.html",
          :title => "Cleaning up" } Cleaning up

%br

.section-grouping
  %h2 1. Create the template

  %p
    Create an XML file with the following content in it; the file name and extension doesn't matter.
    Be sure to change the "rootpw" element.

  %p
    %pre
      :preserve
        &lt;template&gt;
          &lt;name&gt;Fedora 15 Template&lt;/name&gt;
          &lt;os&gt;
            &lt;name&gt;Fedora&lt;/name&gt;
            &lt;version&gt;15&lt;/version&gt;
            &lt;arch&gt;x86_64&lt;/arch&gt;
            &lt;install type='url'&gt;
              &lt;url&gt;http://download.fedoraproject.org/pub/fedora/linux/releases/15/Fedora/x86_64/os/&lt;/url&gt;
            &lt;/install&gt;
            &lt;rootpw&gt;p@ssw0rd&lt;/rootpw&gt;
          &lt;/os&gt;
          &lt;description&gt;A Fedora 15 Image Factory Template&lt;/description&gt;
          &lt;commands&gt;
            &lt;command name="F15 updates"&gt;yum update -y&lt;/command&gt;
          &lt;/commands&gt;
        &lt;/template&gt;

%br

.section-grouping
  %h2 2. Build and transfer the image

  %p
    Now use the aeolus-image command-line tool to build the image described in the XML.

    %pre
      :preserve
        $ aeolus-cli build --target ec2,mock --template template.xml

        Target Image                             Target     Status        Image                                    Build                                    
        ------------------------------------     ------     ---------     ------------------------------------     ------------------------------------     
        1306b29e-a30e-4efd-a1fb-09753863d77c     ec2        COMPLETED     6214d1b6-7292-436f-9c62-f0852e469f70     995535c8-ee70-407c-9413-12d274bbdd1d     
        b33236d7-81b9-41b0-96f9-d039acd60537     mock       COMPLETED     6214d1b6-7292-436f-9c62-f0852e469f70     995535c8-ee70-407c-9413-12d274bbdd1d  

        Target Image: 663ad46e-709f-4ea1-89f0-e73b8bb2205a
        Image: cb7acabd-59c3-41a7-894a-f3e1b072638c
        Build: 3b5624b1-c9a5-48e2-b6cb-2abecd232eb9
        Status: COMPLETED
        Percent Complete: 100

  .note
    %p
      %b NOTE -
      The Image and Target Image values are important.
      %br
      %br
      We use the Target Image value in the next step below, and the Image one
      on the next page.

  %p
    When building for EC2, this occurs in the form of a "snapshot build" that
    occurs in the cloud using your EC2 credentials. For all other providers, Image
    Factory will build an image locally inside of a virtual machine, so hardware
    virtualization support is required.

  -# Needs to be verified/updated for 0.6.0
  -#%p
  -#  Note that it is possible to build for more than one target by separating them with commas, e.g., with --target ec2,mock.

  %p
    Once an image is built, we push it to a
    %b Cloud Provider
    using the account configured earlier.

  %p
    aeolus-image just needs the Provider Account name
    (ec2_east) and the Target Image UUID given by the last command
    (2814a4e5-67a1-4dc3-b8be-8977bca61e8b).  To push to the mock provider account, simply use "mock" as the account name.

    %pre
      :preserve
        $ aeolus-image push -A ec2_east -t <span style="color: lightblue">2814a4e5-67a1-4dc3-b8be-8977bca61e8b</span>
        Target Image: 2814a4e5-67a1-4dc3-b8be-8977bca61e8b
        Provider Image: 19d97c85-3db3-41fa-bf92-63fb6fed738a   Status: New

  %p
    Building and pushing can take some time. You can watch its progress by
    tailing the Image Factory and Image Warehouse logs:

    -#%pre
    -#  :preserve
    -#    $ tail -20f /var/log/imagefactory.log
    -#    [verbose progress information appears here]

    -#To monitor the push process, tail the Image Factory and Image Warehouse logs:
    %pre
      :preserve
        $ tail -20f /var/log/imagefactory.log
        [verbose progress information appears here]

    %pre
      :preserve
        $ tail -20f /var/log/iwhd.log
        [verbose progress information appears here]

  %p
    You will know it has finished when the output in the log file ceases after
    displaying an entry like this:

  %p
    %pre
      :preserve
        2011-11-24 10:08:49,375 DEBUG imgfac.ImageWarehouse.ImageWarehouse pid(3698) Message: Setting metadata ({'latest_unpushed': None})
        for http://localhost:9090/images/609a6eee-5ec5-4b13-8486-7491d091f8dc

%br

.section-grouping
  %h2 3. Verifying on the Amazon Cloud side

  %p
    If you pushed the template to your Amazon EC2 account,
    load Amazon's AWS Management Console in your web browser.
    You will see this image in your list of registered AMI's:

  %p
    &nbsp;&nbsp;&nbsp;
    %img{ :src => "images/getting_started/new_ami_in_ami_list.png",
          :title => "New registered AMI",
          :alt => "New registered AMI" }

  %p
    Changing to the Amazon S3 tab, you will see a new bucket has been
    created to hold the AMI:

  %p
    &nbsp;&nbsp;&nbsp;
    %img{ :src => "images/getting_started/new_s3_bucket_holding_ami.png",
          :title => "New S3 bucket",
          :alt => "New S3 bucket" }

%br

%a.button{ :href => "start_image.html", :title => "Start An Instance Of An Image" }
  Start Image
  %img{:src => "images/button-right.png", :alt => "â†’"}
